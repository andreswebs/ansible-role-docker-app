---
- name: "app | Create {{ app_name }} group"
  ansible.builtin.group:
    state: present
    gid: "{{ app_gid }}"
    name: "{{ app_group }}"
    non_unique: "{{ app_group_overwrite }}"
  tags:
    - app
    - app-user

- name: "app | Create {{ app_name }} user"
  ansible.builtin.user:
    state: present
    uid: "{{ app_uid }}"
    name: "{{ app_user }}"
    group: "{{ app_group }}"
    groups: docker
    append: true
    create_home: false
    home: "{{ app_home }}"
    shell: "{{ app_user_shell }}"
    password: "*"
  tags:
    - app
    - app-user

- name: "app | Create {{ app_home }}"
  ansible.builtin.file:
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    dest: "{{ app_home }}"
    mode: "0750"
    recurse: true
  tags:
    - app
    - app-user

- name: "app | Ensure {{ app_dest }}"
  ansible.builtin.file:
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    dest: "{{ app_dest }}"
    mode: "0750"
    recurse: true
  tags:
    - app
    - app-user

- name: "app | Install {{ app_name }} to {{ app_dest }}"
  ansible.builtin.copy:
    src: "{{ app_src }}"
    dest: "{{ app_dest }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: "0750"
  notify:
    - Restart app
  tags:
    - app
    - app-install

- name: "app | Install {{ app_name }} service"
  ansible.builtin.template:
    src: docker-app.service.j2
    dest: "/etc/systemd/system/{{ app_name }}.service"
    owner: root
    group: root
    mode: "0600"
  tags:
    - app
    - app-install
    - app-service

- name: "app | Start and enable {{ app_name }} service"
  ansible.builtin.service:
    name: "{{ app_name }}.service"
    state: started
    enabled: true
  tags:
    - app
    - app-install
    - app-service
